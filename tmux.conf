# Set mouse mode on
set -g mouse on
set-option -g mouse on

# Time in milliseconds for which tmux waits after an escape
set-option -g escape-time 0

# Enable supported focus events
set-option -g focus-events on

# History settings
set-option -g history-limit 10000
set-option -g history-file ~/.tmux/tmuxhistory

# Display messages for longer (4 seconds)
set -g display-time 4000

# Start window index at 1
set-option -g base-index 1

# Start pane index at 1
set-option -g pane-base-index 1

# Rename window to reflect current program
set-window-option -g automatic-rename on

# Set terminal title
set -g set-titles on

# Renumber windows when one is closed
set-option -g renumber-windows on

# Use vim keybindings
set-option -g mode-keys vi
set-option -g status-keys vi

# Activity
set-option -g monitor-activity on
set-option -g visual-activity off

# Unbind default prefix key
unbind-key C-b

# Set default prefix key
set-option -g prefix C-a

# Bind "C-a C-a" to send "C-a"
bind-key C-a send-prefix

# Reload configuration
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Switch panes
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R

# Switch windows
unbind-key n
bind-key -n M-p previous-window
bind-key -n M-n next-window

#  Split pane with same directory
unbind-key '"'
unbind-key %
bind-key - split-window -v -c "#{pane_current_path}"
bind-key \\ split-window -h -c "#{pane_current_path}"
bind-key _ split-window -fv -c "#{pane_current_path}"
bind-key | split-window -fh -c "#{pane_current_path}"

# Resize panes
bind-key -n M-H resize-pane -L 2
bind-key -n M-J resize-pane -D 1
bind-key -n M-K resize-pane -U 1
bind-key -n M-L resize-pane -R 2

# Toggle zoom
bind-key -n M-z resize-pane -Z   

# Move panes
unbind-key \{
unbind-key \}
bind-key -r H swap-pane -U
bind-key -r L swap-pane -D

# Kill pane
bind-key x kill-pane

# Swap windows across themselves
bind-key -r "<" swap-window -t -1
bind-key -r ">" swap-window -t +1

# Kill window
unbind-key &
bind-key X kill-window

# Set DISPLAY to X-Forwarded DISPLAY
set-option -g update-environment "DISPLAY"

# Jump search mode with prefix
bind-key / copy-mode \; send-keys "/"
bind-key ? copy-mode \; send-keys "?"

# Enter copy mode
bind-key -n M-v copy-mode

# Select
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
#bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard -d `tmux show-env | sed -n s/^DISPLAY=//p` >/dev/null'

# Cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Paste
bind-key p paste-buffer -s ""
bind-key P choose-buffer "paste-buffer -b '%%' -s ''"

# Make mouse drag end behavior configurable
unbind-key -T copy-mode-vi MouseDragEnd1Pane


# NOTE: you can use vars with $<var> and ${<var>} as long as the str is double quoted: ""
# WARNING: hex colors can't contain capital letters
# --> Catppuccin
thm_bg="#1e1e28"
thm_fg="#dadae8"
thm_cyan="#c2e7f0"
thm_black="#15121c"
thm_gray="#332e41"
thm_magenta="#c6aae8"
thm_pink="#e5b4e2"
thm_red="#e38c8f"
thm_green="#b1e3ad"
thm_yellow="#ebddaa"
thm_blue="#a4b9ef"
thm_orange="#f9c096"
thm_black4="#575268"

# ----------------------------=== Theme ===--------------------------

# status
set -g status-position bottom
set -g status "on"
set -g status-bg "${thm_bg}"
set -g status-justify "left"
set -g status-left-length "100"
set -g status-right-length "100"

# messages
set -g message-style fg="${thm_gray}",bg="${thm_pink}",align="centre"
set -g message-command-style fg="${thm_cyan}",bg="${thm_gray}",align="centre"

# panes
set -g pane-border-style fg="${thm_gray}"
set -g pane-active-border-style fg="${thm_blue}"

# windows
setw -g window-status-activity-style fg="${thm_fg}",bg="${thm_bg}",none
setw -g window-status-separator ""
setw -g window-status-style fg="${thm_fg}",bg="${thm_bg}",none

# --------=== Statusline

set -g status-left ""
set -g status-right "#[fg=$thm_pink,bg=$thm_bg,nobold,nounderscore,noitalics]#[fg=$thm_bg,bg=$thm_pink,nobold,nounderscore,noitalics] #[fg=$thm_fg,bg=$thm_gray] #W #{?client_prefix,#[fg=$thm_red],#[fg=$thm_green]}#[bg=$thm_gray]#{?client_prefix,#[bg=$thm_red],#[bg=$thm_green]}#[fg=$thm_bg] #[fg=$thm_fg,bg=$thm_gray] #I:#P "

# window-status: current_dir
# setw -g window-status-format "#[fg=$thm_bg,bg=$thm_blue] #I #[fg=$thm_fg,bg=$thm_gray] #{b:pane_current_path} "
# setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_orange] #I #[fg=$thm_fg,bg=$thm_bg] #{b:pane_current_path} "

# window-status: current window name / command
# window-status also shows activity
setw -g window-status-format "#{?window_activity_flag,#[bg=$thm_red],#[fg=$thm_bg,bg=$thm_fg]} #I #{?window_activity_flag,#[bg=$thm_red],#[fg=$thm_fg,bg=$thm_gray]} #W "
setw -g window-status-current-format "#[fg=$thm_bg,bg=$thm_pink] #I #[fg=$thm_fg,bg=$thm_bg] #W "

# window-status: parent_dir/current_dir
# setw -g window-status-format "#[fg=colour232,bg=colour111] #I #[fg=colour222,bg=colour235] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "
# setw -g window-status-current-format "#[fg=colour232,bg=colour208] #I #[fg=colour255,bg=colour237] #(echo '#{pane_current_path}' | rev | cut -d'/' -f-2 | rev) "

# --------=== Modes
setw -g clock-mode-colour "${thm_blue}"
setw -g mode-style "fg=${thm_pink} bg=${thm_black4} bold"

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.dotfiles/tmux/plugins'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-copycat'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

set-option -g @tmux-autoreload-configs '/home/katie/.dotfiles/tmux.conf'
